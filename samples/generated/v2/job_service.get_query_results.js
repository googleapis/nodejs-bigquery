// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(projectId, jobId) {
  // [START bigquery_v2_generated_JobService_GetQueryResults_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Project ID of the query job.
   */
  // const projectId = 'abc123'
  /**
   *  Required. Job ID of the query job.
   */
  // const jobId = 'abc123'
  /**
   *  Zero-based index of the starting row.
   */
  // const startIndex = {}
  /**
   *  Page token, returned by a previous call, to request the next page of
   *  results.
   */
  // const pageToken = 'abc123'
  /**
   *  Maximum number of results to read.
   */
  // const maxResults = {}
  /**
   *  Optional: Specifies the maximum amount of time, in milliseconds, that the
   *  client is willing to wait for the query to complete. By default, this limit
   *  is 10 seconds (10,000 milliseconds). If the query is complete, the
   *  jobComplete field in the response is true. If the query has not yet
   *  completed, jobComplete is false.
   *  You can request a longer timeout period in the timeoutMs field.  However,
   *  the call is not guaranteed to wait for the specified timeout; it typically
   *  returns after around 200 seconds (200,000 milliseconds), even if the query
   *  is not complete.
   *  If jobComplete is false, you can continue to wait for the query to complete
   *  by calling the getQueryResults method until the jobComplete field in the
   *  getQueryResults response is true.
   */
  // const timeoutMs = {}
  /**
   *  The geographic location of the job. You must specify the location to run
   *  the job for the following scenarios:
   *  * If the location to run a job is not in the `us` or
   *    the `eu` multi-regional location
   *  * If the job's location is in a single region (for example,
   *  `us-central1`)
   *  For more information, see
   *  https://cloud.google.com/bigquery/docs/locations#specifying_your_location.
   */
  // const location = 'abc123'
  /**
   *  Optional. Output format adjustments.
   */
  // const formatOptions = {}

  // Imports the Bigquery library
  const {JobServiceClient} = require('bigquery').v2;

  // Instantiates a client
  const bigqueryClient = new JobServiceClient();

  async function callGetQueryResults() {
    // Construct request
    const request = {
      projectId,
      jobId,
    };

    // Run request
    const response = await bigqueryClient.getQueryResults(request);
    console.log(response);
  }

  callGetQueryResults();
  // [END bigquery_v2_generated_JobService_GetQueryResults_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
